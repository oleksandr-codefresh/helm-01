gitops-runtime:
  app-proxy:
    replicaCount: 1
    config:
      cors: http://local.codefresh.io
      argoCdUrl: http://argo-cd-server:80/argocd
    image:
      tag: 1.2620.0-CR-22099-ff-and-rf-switch-6148bf6
  #  argo-workflows:
  #    controller:
  #      replicas: 1
  argo-cd:
    configs:
      params:
        server.basehref: /argocd
        server.rootpath: /argocd
      cm:
        codefresh.reporterVersion: v2
    eventReporter:
      enabled: "true"
      version: v2
      # env: 
      #   - name: USE_GRPC
      #     value: "true"
    repoServer:
      replicas: 1
      volumes:
      - configMap:
          name: helm-sops-config
        name: cmp-plugin
      extraContainers:
      - name: cmp
        command: [/var/run/argocd/argocd-cmp-server]
        image: quay.io/codefresh/internal-argocd-plugins/helm-sops:3.12.0
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        env:
          - name: HELM_CACHE_HOME
            value: /helm-working-dir
          - name: HELM_CONFIG_HOME
            value: /helm-working-dir
          - name: HELM_DATA_HOME
            value: /helm-working-dir
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            subPath: plugin.yaml
            name: cmp-plugin
          - name: helm-working-dir
            mountPath: /helm-working-dir
    extraObjects:
    - apiVersion: v1
      kind: ConfigMap
      metadata:
        name: helm-sops-config
      data:
        plugin.yaml: |
          apiVersion: argoproj.io/v1alpha1
          kind: ConfigManagementPlugin
          metadata:
            name: helm-sops
          spec:
            init:
              command:
              - sh
              - -c
              - -e
              - |
                git checkout -- .
                git clean -fdx
                sops -d -i secrets.yaml
                helm dependency update
            generate:
              command:
              - sh
              - -c
              - -e
              - |
                helm template --namespace $ARGOCD_APP_NAMESPACE --release-name $ARGOCD_ENV_RELEASE_NAME --values values.yaml --values secrets.yaml .
            discover:
              find:
                glob: "**/secrets.yaml"

    controller:
      replicas: 1
    server:
      replicas: 1
      # image:
      #   repository: docker.io/xeonalex/personal-argocd-dev
      #   tag: vuln-fix
      # service:
        # annotations:
        #   kubernetes.io/ingress.class: nginx-public
        # type: LoadBalancer - краще юзати ingress
  event-reporters:
    events:
      argoCDServerServicePort: 80/argocd
    workflow:
      eventSource:
        replicas: 0
      sensor:
        replicas: 0
  global:
    # image:
    #   repository: docker.io/xeonalex/personal-argocd-dev
    #   tag: git-client
    codefresh:
      accountId: 65a57fa5f5681104cb83078f
      url: https://alexs-platform.ngrok.io
      userToken:
        secretKeyRef:
          name: codefresh-user-token
          key: token
    runtime:
      ingress:
        className: nginx-internal
        enabled: true
        hosts:
          - alex-hermes-local.rnd-sandbox.cf-infra.com
        protocol: https
      name: helm-01
  installer:
    skipValidation: true
